name: Sync Main to Develop

on:
  push:
    branches:
      - main

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to access full commit history

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Check merge source and create sync PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the last commit message on main (the merge commit)
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)

          # Check if the merge was from a hotfix or release branch
          if [[ "$LAST_COMMIT_MSG" =~ Merge\ pull\ request\ .*from\ .*hotfix/ ]] || 
             [[ "$LAST_COMMIT_MSG" =~ Merge\ pull\ request\ .*from\ .*release/ ]]; then
            echo "Detected merge from hotfix or release branch, syncing to develop."

            # Create a temporary branch for the PR
            SYNC_BRANCH="sync-main-to-develop-$(date +%s)"
            git checkout -b $SYNC_BRANCH

            # Attempt to merge main into develop
            git fetch origin develop:develop
            if git merge origin/develop --no-commit --no-ff; then
              echo "No conflicts detected. Creating PR for automatic sync."
            else
              echo "Conflicts detected. PR will require manual resolution."
            fi

            git commit -am "Sync main to develop after hotfix/release merge"
            git push origin $SYNC_BRANCH

            gh pr create \
              --base develop \
              --head $SYNC_BRANCH \
              --title "Auto-sync: main to develop" \
              --body "Automated PR to sync changes from main to develop after hotfix or release merge. If this PR has conflicts, manual resolution is required."
          else
            echo "Push to main was not from a hotfix or release branch, no sync needed."
          fi
